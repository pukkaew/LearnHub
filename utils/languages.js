// Language translations for the application
const translations = {
    th: {
        // Navigation
        dashboard: '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î',
        courses: '‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        tests: '‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        articles: '‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°',
        users: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
        applicants: '‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡∏≤‡∏ô',
        profile: '‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå',
        settings: '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤',
        userSettings: '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
        systemSettings: '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö',
        logout: '‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö',
        login: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
        signIn: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
        employeeId: '‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        password: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô',
        rememberMe: '‡∏à‡∏î‡∏à‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö',
        forgotPassword: '‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?',
        dontHaveAccount: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ?',
        createAccount: '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',

        // Dashboard
        welcome: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ',
        welcomeToSystem: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö LearnHub',
        level: '‡∏£‡∏∞‡∏î‡∏±‡∏ö',
        totalPoints: '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏∞‡∏™‡∏°',
        enrolledCourses: '‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        completed: '‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß',
        completedCourses: '‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß',
        testsCompleted: '‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
        averageScore: '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢',
        publishedArticles: '‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°',
        views: '‡∏Å‡∏≤‡∏£‡∏î‡∏π',
        badges: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•',
        received: '‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö',

        // Sections
        recentCourses: '‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î',
        learningProgress: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        recentArticles: '‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà',
        notifications: '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
        myBadges: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô',
        leaderboard: '‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        quickActions: '‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô',

        // Quick Actions
        searchCourses: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≠‡∏£‡πå‡∏™',
        writeArticle: '‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°',
        editProfile: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå',
        manageApplicants: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£',

        // Buttons
        viewAll: '‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        markAllRead: '‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',

        // Status
        online: '‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå',
        offline: '‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå',
        points: '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô',

        // Loading & Messages
        loading: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...',
        loadingShort: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...',
        errorLoading: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•',
        noTitle: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠',
        instructor: '‡∏ú‡∏π‡πâ‡∏™‡∏≠‡∏ô',
        noAuthor: '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô',
        reports: '‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô',
        completionProgress: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',

        // Empty States
        noCourses: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        noProgress: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        noArticles: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà',
        noNotifications: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
        noBadges: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•',
        noLeaderboard: '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö',

        // Time
        minutesAgo: '‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
        hoursAgo: '‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
        daysAgo: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß',
        justNow: '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà',

        // Department
        noDepartment: '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏ú‡∏ô‡∏Å',

        // Footer & Contact
        contact: '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
        menu: '‡πÄ‡∏°‡∏ô‡∏π',
        company: '‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤',
        quickLinks: '‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡πà‡∏ß‡∏ô',
        followUs: '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏£‡∏≤',
        companyDescription: '‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ç‡∏≠‡∏á ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏£‡∏±‡∏Å‡∏ä‡∏±‡∏¢‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏¢‡πá‡∏ô ‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏µ‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô',
        address: '‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà',
        phone: '‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå',
        email: '‡∏≠‡∏µ‡πÄ‡∏°‡∏•',
        workingHours: '‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£',
        workingTime: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏®‡∏∏‡∏Å‡∏£‡πå 8:00 - 17:00 ‡∏ô.',
        allRightsReserved: '‡∏™‡∏á‡∏ß‡∏ô‡∏•‡∏¥‡∏Ç‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå',
        privacyPolicy: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
        termsOfService: '‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
        help: '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
        support: '‡∏ù‡πà‡∏≤‡∏¢‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô',
        faq: '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢',
        learningResources: '‡πÅ‡∏´‡∏•‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ',
        elearning: '‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå',
        careers: '‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤'
    },
    en: {
        // Navigation
        dashboard: 'Dashboard',
        courses: 'Courses',
        tests: 'Tests',
        articles: 'Articles',
        users: 'Manage Users',
        applicants: 'Job Applicants',
        profile: 'Profile',
        settings: 'Settings',
        userSettings: 'User Settings',
        systemSettings: 'System Settings',
        logout: 'Logout',
        login: 'Login',
        signIn: 'Sign In',
        employeeId: 'Employee ID',
        password: 'Password',
        rememberMe: 'Remember me',
        forgotPassword: 'Forgot password?',
        dontHaveAccount: 'Don\'t have an account?',
        createAccount: 'Create account',

        // Dashboard
        welcome: 'Hello',
        welcomeToSystem: 'Welcome to LearnHub System',
        level: 'Level',
        totalPoints: 'Total Points',
        enrolledCourses: 'Enrolled Courses',
        completed: 'Completed',
        completedCourses: 'Completed',
        testsCompleted: 'Tests',
        averageScore: 'Average Score',
        publishedArticles: 'Articles',
        views: 'Views',
        badges: 'Badges',
        received: 'Received',

        // Sections
        recentCourses: 'Recent Courses',
        learningProgress: 'Learning Progress',
        recentArticles: 'Recent Articles',
        notifications: 'Notifications',
        myBadges: 'My Badges',
        leaderboard: 'Leaderboard',
        quickActions: 'Quick Actions',

        // Quick Actions
        searchCourses: 'Search Courses',
        writeArticle: 'Write Article',
        editProfile: 'Edit Profile',
        manageApplicants: 'Manage Applicants',

        // Buttons
        viewAll: 'View All',
        markAllRead: 'Mark All Read',

        // Status
        online: 'Online',
        offline: 'Offline',
        points: 'points',

        // Loading & Messages
        loading: 'Loading data...',
        loadingShort: 'Loading...',
        errorLoading: 'Error loading data',
        noTitle: 'No Title',
        instructor: 'Instructor',
        noAuthor: 'No Author',
        reports: 'Reports',
        completionProgress: 'Completed',

        // Empty States
        noCourses: 'No enrolled courses yet',
        noProgress: 'No learning progress yet',
        noArticles: 'No new articles',
        noNotifications: 'No notifications',
        noBadges: 'No badges yet',
        noLeaderboard: 'No leaderboard data',

        // Time
        minutesAgo: 'minutes ago',
        hoursAgo: 'hours ago',
        daysAgo: 'days ago',
        justNow: 'just now',

        // Department
        noDepartment: 'No Department',

        // Footer & Contact
        contact: 'Contact',
        menu: 'Menu',
        company: 'About Us',
        quickLinks: 'Quick Links',
        followUs: 'Follow Us',
        companyDescription: 'Learning Management System of Rukchai Hongyen Co., Ltd. to continuously develop employee knowledge and skills, enhance competitiveness and sustainable growth.',
        address: 'Address',
        phone: 'Phone',
        email: 'Email',
        workingHours: 'Working Hours',
        workingTime: 'Monday - Friday 8:00 AM - 5:00 PM',
        allRightsReserved: 'All rights reserved',
        privacyPolicy: 'Privacy Policy',
        termsOfService: 'Terms of Service',
        help: 'Help',
        support: 'Support',
        faq: 'FAQ',
        learningResources: 'Learning Resources',
        elearning: 'E-Learning Platform',
        careers: 'Careers'
    }
};

function getTranslation(lang, key) {
    const keys = key.split('.');
    let value = translations[lang] || translations.th;

    for (const k of keys) {
        value = value[k];
        if (!value) return key; // Return key if translation not found
    }

    return value;
}

function getCurrentLanguage(req) {
    // Debug logging
    console.log('üîç Getting current language...');
    console.log('  Session language:', req.session?.language);
    console.log('  Cookies:', {
        ruxchai_language: req.cookies?.ruxchai_language,
        language: req.cookies?.language,
        preferred_language: req.cookies?.preferred_language
    });

    // Check session first
    if (req.session && req.session.language) {
        console.log('  ‚úÖ Using session language:', req.session.language);
        return req.session.language;
    }

    // Check cookies (multiple possible names for backward compatibility)
    if (req.cookies) {
        if (req.cookies.ruxchai_language) {
            console.log('  ‚úÖ Using ruxchai_language cookie:', req.cookies.ruxchai_language);
            // Save to session for this request
            if (req.session) {
                req.session.language = req.cookies.ruxchai_language;
            }
            return req.cookies.ruxchai_language;
        }
        if (req.cookies.language) {
            console.log('  ‚úÖ Using language cookie:', req.cookies.language);
            // Save to session for this request
            if (req.session) {
                req.session.language = req.cookies.language;
            }
            return req.cookies.language;
        }
        if (req.cookies.preferred_language) {
            console.log('  ‚úÖ Using preferred_language cookie:', req.cookies.preferred_language);
            // Save to session for this request
            if (req.session) {
                req.session.language = req.cookies.preferred_language;
            }
            return req.cookies.preferred_language;
        }
    }

    // Always default to Thai - no browser language detection
    console.log('  ‚ö†Ô∏è No language found, defaulting to Thai');
    return 'th';
}

// Language middleware for Express
function languageMiddleware(req, res, next) {
    const currentLang = getCurrentLanguage(req);

    // Set language in request for easy access
    req.language = currentLang;

    // Set language in response locals for template access
    res.locals.language = currentLang;
    res.locals.currentLanguage = currentLang;

    // Add translation helper to response locals
    res.locals.t = (key, defaultValue = key) => {
        return getTranslation(currentLang, key) || defaultValue;
    };

    // Add language info to locals
    res.locals.languageInfo = {
        current: currentLang,
        name: currentLang === 'th' ? '‡πÑ‡∏ó‡∏¢' : 'English',
        flag: currentLang
    };

    // Override res.render to ensure translation function is always available
    const originalRender = res.render;
    res.render = function(view, options = {}, callback) {
        // Ensure translation function is always included
        options.t = options.t || res.locals.t;
        options.language = options.language || currentLang;
        options.currentLanguage = options.currentLanguage || currentLang;

        return originalRender.call(this, view, options, callback);
    };

    next();
}

module.exports = {
    translations,
    getTranslation,
    getCurrentLanguage,
    languageMiddleware
};