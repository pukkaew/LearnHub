<%- include('../layouts/header') %>

<div class="bg-gradient-to-br from-ruxchai-primary/5 to-ruxchai-secondary/5 min-h-screen">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Test Header -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 mb-8">
            <div class="flex items-center justify-between">
                <div>
                    <h1 id="testTitle" class="text-2xl font-bold text-gray-900 mb-2">ข้อสอบการประเมินตำแหน่งงาน</h1>
                    <div class="flex items-center space-x-6 text-sm text-gray-600">
                        <span id="positionTitle">ตำแหน่ง: -</span>
                        <span id="questionCount">จำนวนข้อ: 0 ข้อ</span>
                        <span id="timeLimit">เวลา: 0 นาที</span>
                        <span id="passingScore">คะแนนผ่าน: 0%</span>
                    </div>
                </div>

                <!-- Timer -->
                <div class="text-right">
                    <div class="text-3xl font-bold text-ruxchai-primary" id="timer">00:00:00</div>
                    <div class="text-sm text-gray-500">เวลาที่เหลือ</div>
                </div>
            </div>
        </div>

        <!-- Test Content -->
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
            <!-- Questions Area -->
            <div class="lg:col-span-3">
                <!-- Current Question -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-8 mb-6">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-lg font-medium text-gray-900">
                            ข้อที่ <span id="currentQuestionNumber">1</span> จาก <span id="totalQuestions">0</span>
                        </h2>
                        <div class="flex items-center space-x-2 text-sm text-gray-500">
                            <span id="questionType">ปรนัย</span>
                            <span>•</span>
                            <span id="questionPoints">1 คะแนน</span>
                        </div>
                    </div>

                    <!-- Question Content -->
                    <div id="questionContent" class="mb-8">
                        <!-- Question will be loaded here -->
                    </div>

                    <!-- Answer Options -->
                    <div id="answerOptions" class="space-y-4">
                        <!-- Answer options will be loaded here -->
                    </div>

                    <!-- Navigation -->
                    <div class="flex justify-between items-center pt-8 border-t border-gray-200">
                        <button id="prevBtn" class="px-6 py-3 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed">
                            <i class="fas fa-chevron-left mr-2"></i>ข้อก่อนหน้า
                        </button>

                        <div class="flex space-x-3">
                            <button id="markBtn" class="px-4 py-2 text-orange-600 border border-orange-300 rounded-lg hover:bg-orange-50 transition-colors">
                                <i class="far fa-flag mr-2"></i>ทำเครื่องหมาย
                            </button>
                            <button id="clearBtn" class="px-4 py-2 text-red-600 border border-red-300 rounded-lg hover:bg-red-50 transition-colors">
                                <i class="fas fa-eraser mr-2"></i>ลบคำตอบ
                            </button>
                        </div>

                        <button id="nextBtn" class="px-6 py-3 bg-ruxchai-primary text-white rounded-lg hover:bg-ruxchai-primary/90 transition-colors">
                            ข้อถัดไป<i class="fas fa-chevron-right ml-2"></i>
                        </button>
                    </div>
                </div>

                <!-- Submit Test -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <div class="text-center">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">พร้อมส่งข้อสอบแล้วหรือไม่?</h3>
                        <p class="text-gray-600 mb-6">กรุณาตรวจสอบคำตอบของคุณก่อนส่งข้อสอบ การส่งข้อสอบไม่สามารถแก้ไขได้</p>
                        <button id="submitTestBtn" class="px-8 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-lg font-medium">
                            <i class="fas fa-paper-plane mr-2"></i>ส่งข้อสอบ
                        </button>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="space-y-6">
                <!-- Progress -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">ความคืบหน้า</h3>

                    <div class="mb-4">
                        <div class="flex justify-between text-sm text-gray-600 mb-2">
                            <span>ตอบแล้ว</span>
                            <span id="progressText">0/0</span>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div id="progressBar" class="bg-ruxchai-primary h-2 rounded-full" style="width: 0%"></div>
                        </div>
                    </div>

                    <div class="grid grid-cols-2 gap-4 text-sm">
                        <div class="text-center p-3 bg-green-50 rounded-lg">
                            <div class="text-lg font-bold text-green-600" id="answeredCount">0</div>
                            <div class="text-green-800">ตอบแล้ว</div>
                        </div>
                        <div class="text-center p-3 bg-gray-50 rounded-lg">
                            <div class="text-lg font-bold text-gray-600" id="unansweredCount">0</div>
                            <div class="text-gray-800">ยังไม่ตอบ</div>
                        </div>
                        <div class="text-center p-3 bg-orange-50 rounded-lg">
                            <div class="text-lg font-bold text-orange-600" id="markedCount">0</div>
                            <div class="text-orange-800">ทำเครื่องหมาย</div>
                        </div>
                        <div class="text-center p-3 bg-blue-50 rounded-lg">
                            <div class="text-lg font-bold text-blue-600" id="reviewCount">0</div>
                            <div class="text-blue-800">ทบทวน</div>
                        </div>
                    </div>
                </div>

                <!-- Question Navigator -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">ข้อคำถาม</h3>
                    <div id="questionNavigator" class="grid grid-cols-5 gap-2">
                        <!-- Question buttons will be loaded here -->
                    </div>
                </div>

                <!-- Test Instructions -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">คำแนะนำการทำข้อสอบ</h3>
                    <div id="testInstructions" class="text-sm text-gray-600 space-y-2">
                        <!-- Instructions will be loaded here -->
                    </div>
                </div>

                <!-- Legends -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">สัญลักษณ์</h3>
                    <div class="space-y-2 text-sm">
                        <div class="flex items-center">
                            <div class="w-6 h-6 bg-green-500 text-white rounded text-center text-xs leading-6 mr-3">1</div>
                            <span>ตอบแล้ว</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-6 h-6 bg-gray-300 text-gray-700 rounded text-center text-xs leading-6 mr-3">1</div>
                            <span>ยังไม่ตอบ</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-6 h-6 bg-orange-500 text-white rounded text-center text-xs leading-6 mr-3">
                                <i class="fas fa-flag text-xs"></i>
                            </div>
                            <span>ทำเครื่องหมาย</span>
                        </div>
                        <div class="flex items-center">
                            <div class="w-6 h-6 bg-ruxchai-primary text-white rounded text-center text-xs leading-6 mr-3">1</div>
                            <span>ข้อปัจจุบัน</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Confirm Submit Modal -->
<div id="confirmSubmitModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-xl shadow-2xl max-w-md w-full">
            <div class="p-6">
                <div class="text-center">
                    <div class="w-16 h-16 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-exclamation-triangle text-yellow-600 text-2xl"></i>
                    </div>
                    <h3 class="text-xl font-bold text-gray-900 mb-4">ยืนยันการส่งข้อสอบ</h3>
                    <p class="text-gray-600 mb-6">คุณแน่ใจหรือไม่ที่จะส่งข้อสอบ? หลังจากส่งแล้วจะไม่สามารถแก้ไขคำตอบได้</p>

                    <div class="bg-gray-50 rounded-lg p-4 mb-6 text-left">
                        <div class="grid grid-cols-2 gap-4 text-sm">
                            <div>
                                <span class="text-gray-500">ตอบแล้ว:</span>
                                <span id="finalAnsweredCount" class="font-medium">0 ข้อ</span>
                            </div>
                            <div>
                                <span class="text-gray-500">ยังไม่ตอบ:</span>
                                <span id="finalUnansweredCount" class="font-medium text-red-600">0 ข้อ</span>
                            </div>
                            <div>
                                <span class="text-gray-500">ทำเครื่องหมาย:</span>
                                <span id="finalMarkedCount" class="font-medium text-orange-600">0 ข้อ</span>
                            </div>
                            <div>
                                <span class="text-gray-500">เวลาที่เหลือ:</span>
                                <span id="finalTimeLeft" class="font-medium">00:00:00</span>
                            </div>
                        </div>
                    </div>

                    <div class="flex space-x-3">
                        <button id="cancelSubmit" class="flex-1 px-6 py-3 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                            ยกเลิก
                        </button>
                        <button id="confirmSubmit" class="flex-1 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors">
                            ยืนยันส่งข้อสอบ
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Time Warning Modal -->
<div id="timeWarningModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white rounded-xl shadow-2xl max-w-md w-full">
            <div class="p-6">
                <div class="text-center">
                    <div class="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-clock text-red-600 text-2xl"></i>
                    </div>
                    <h3 class="text-xl font-bold text-gray-900 mb-4">แจ้งเตือนเวลา</h3>
                    <p id="timeWarningMessage" class="text-gray-600 mb-6">เหลือเวลาอีก 5 นาที กรุณาเตรียมตัวส่งข้อสอบ</p>
                    <button id="acknowledgeWarning" class="px-6 py-3 bg-ruxchai-primary text-white rounded-lg hover:bg-ruxchai-primary/90 transition-colors">
                        รับทราบ
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Global variables
let testData = {};
let questions = [];
let currentQuestionIndex = 0;
let answers = {};
let markedQuestions = new Set();
let timeRemaining = 0;
let timerInterval = null;
let autoSaveInterval = null;
let testStarted = false;

// Initialize test
document.addEventListener('DOMContentLoaded', function() {
    initializeTest();
    setupEventListeners();
    setupAntiCheating();
});

// Event listeners
function setupEventListeners() {
    // Navigation
    document.getElementById('prevBtn').addEventListener('click', goToPrevQuestion);
    document.getElementById('nextBtn').addEventListener('click', goToNextQuestion);

    // Question actions
    document.getElementById('markBtn').addEventListener('click', toggleMarkQuestion);
    document.getElementById('clearBtn').addEventListener('click', clearCurrentAnswer);

    // Submit test
    document.getElementById('submitTestBtn').addEventListener('click', showSubmitConfirmation);
    document.getElementById('confirmSubmit').addEventListener('click', submitTest);
    document.getElementById('cancelSubmit').addEventListener('click', hideSubmitConfirmation);

    // Time warning
    document.getElementById('acknowledgeWarning').addEventListener('click', hideTimeWarning);

    // Prevent form submission on Enter
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' && e.target.type !== 'textarea') {
            e.preventDefault();
        }
    });

    // Auto-save on answer change
    document.addEventListener('change', function(e) {
        if (e.target.name === 'answer') {
            saveAnswer();
            autoSave();
        }
    });

    // Handle page visibility change
    document.addEventListener('visibilitychange', function() {
        if (document.hidden && testStarted) {
            logSuspiciousActivity('tab_switch');
        }
    });
}

// Anti-cheating measures
function setupAntiCheating() {
    // Disable right-click
    document.addEventListener('contextmenu', function(e) {
        e.preventDefault();
    });

    // Disable common keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        // Disable F12, Ctrl+Shift+I, Ctrl+U, etc.
        if (e.key === 'F12' ||
            (e.ctrlKey && e.shiftKey && e.key === 'I') ||
            (e.ctrlKey && e.key === 'u') ||
            (e.ctrlKey && e.shiftKey && e.key === 'C')) {
            e.preventDefault();
            logSuspiciousActivity('dev_tools_attempt');
        }
    });

    // Disable text selection
    document.body.style.userSelect = 'none';
    document.body.style.webkitUserSelect = 'none';
    document.body.style.mozUserSelect = 'none';
    document.body.style.msUserSelect = 'none';

    // Disable copy/paste
    document.addEventListener('copy', function(e) {
        e.preventDefault();
    });

    document.addEventListener('paste', function(e) {
        e.preventDefault();
    });

    // Monitor focus changes
    let focusLossCount = 0;
    window.addEventListener('blur', function() {
        if (testStarted) {
            focusLossCount++;
            logSuspiciousActivity('focus_loss', { count: focusLossCount });

            if (focusLossCount >= 3) {
                showWarning('คุณออกจากหน้าข้อสอบบ่อยเกินไป ระบบจะส่งข้อสอบอัตโนมัติหากออกอีก');
            }

            if (focusLossCount >= 5) {
                autoSubmitTest('excessive_tab_switching');
            }
        }
    });
}

// Initialize test
async function initializeTest() {
    try {
        const testId = getTestIdFromUrl();
        const response = await fetch(`/applicants/api/test/${testId}/start`);
        const data = await response.json();

        if (data.success) {
            testData = data.test;
            questions = data.questions;
            timeRemaining = testData.time_limit * 60; // Convert to seconds

            displayTestInfo();
            loadQuestion(0);
            startTimer();
            setupAutoSave();
            testStarted = true;

            showMessage('เริ่มทำข้อสอบแล้ว', 'success');
        } else {
            showMessage(data.message || 'ไม่สามารถเริ่มข้อสอบได้', 'error');
            setTimeout(() => window.location.href = '/applicants', 2000);
        }
    } catch (error) {
        console.error('Error initializing test:', error);
        showMessage('เกิดข้อผิดพลาดในการโหลดข้อสอบ', 'error');
    }
}

// Display test information
function displayTestInfo() {
    document.getElementById('testTitle').textContent = testData.title;
    document.getElementById('positionTitle').textContent = `ตำแหน่ง: ${testData.position_title}`;
    document.getElementById('questionCount').textContent = `จำนวนข้อ: ${questions.length} ข้อ`;
    document.getElementById('timeLimit').textContent = `เวลา: ${testData.time_limit} นาที`;
    document.getElementById('passingScore').textContent = `คะแนนผ่าน: ${testData.passing_score}%`;
    document.getElementById('totalQuestions').textContent = questions.length;

    // Display instructions
    if (testData.instructions) {
        document.getElementById('testInstructions').innerHTML = testData.instructions.split('\n').map(line =>
            `<p>${line}</p>`
        ).join('');
    }

    // Setup question navigator
    updateQuestionNavigator();
}

// Load question
function loadQuestion(index) {
    if (index < 0 || index >= questions.length) return;

    currentQuestionIndex = index;
    const question = questions[index];

    // Update question info
    document.getElementById('currentQuestionNumber').textContent = index + 1;
    document.getElementById('questionType').textContent = getQuestionTypeName(question.type);
    document.getElementById('questionPoints').textContent = `${question.points || 1} คะแนน`;

    // Display question content
    document.getElementById('questionContent').innerHTML = `
        <div class="prose max-w-none">
            ${question.question_text}
            ${question.question_image ? `<img src="${question.question_image}" alt="Question image" class="mt-4 max-w-full h-auto rounded-lg">` : ''}
        </div>
    `;

    // Display answer options
    displayAnswerOptions(question);

    // Update navigation buttons
    document.getElementById('prevBtn').disabled = index === 0;
    document.getElementById('nextBtn').textContent = index === questions.length - 1 ? 'เสร็จสิ้น' : 'ข้อถัดไป';

    // Update mark button
    const markBtn = document.getElementById('markBtn');
    const isMarked = markedQuestions.has(index);
    markBtn.innerHTML = isMarked ? '<i class="fas fa-flag mr-2"></i>ยกเลิกเครื่องหมาย' : '<i class="far fa-flag mr-2"></i>ทำเครื่องหมาย';
    markBtn.className = isMarked ?
        'px-4 py-2 text-orange-600 bg-orange-50 border border-orange-300 rounded-lg hover:bg-orange-100 transition-colors' :
        'px-4 py-2 text-orange-600 border border-orange-300 rounded-lg hover:bg-orange-50 transition-colors';

    // Update progress
    updateProgress();
    updateQuestionNavigator();
}

// Display answer options based on question type
function displayAnswerOptions(question) {
    const container = document.getElementById('answerOptions');
    const currentAnswer = answers[currentQuestionIndex];

    switch (question.type) {
        case 'multiple_choice':
            container.innerHTML = question.options.map((option, index) => `
                <label class="flex items-start space-x-3 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors">
                    <input type="radio" name="answer" value="${index}"
                           ${currentAnswer == index ? 'checked' : ''}
                           class="mt-1 text-ruxchai-primary focus:ring-ruxchai-primary">
                    <span class="flex-1">${option}</span>
                </label>
            `).join('');
            break;

        case 'true_false':
            container.innerHTML = `
                <label class="flex items-start space-x-3 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors">
                    <input type="radio" name="answer" value="true"
                           ${currentAnswer === 'true' ? 'checked' : ''}
                           class="mt-1 text-ruxchai-primary focus:ring-ruxchai-primary">
                    <span class="flex-1">ถูก</span>
                </label>
                <label class="flex items-start space-x-3 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors">
                    <input type="radio" name="answer" value="false"
                           ${currentAnswer === 'false' ? 'checked' : ''}
                           class="mt-1 text-ruxchai-primary focus:ring-ruxchai-primary">
                    <span class="flex-1">ผิด</span>
                </label>
            `;
            break;

        case 'fill_blank':
            container.innerHTML = `
                <div class="space-y-4">
                    <label class="block text-sm font-medium text-gray-700">คำตอบ:</label>
                    <input type="text" name="answer" value="${currentAnswer || ''}"
                           class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ruxchai-primary focus:border-transparent"
                           placeholder="กรอกคำตอบของคุณ...">
                </div>
            `;
            break;

        case 'essay':
            container.innerHTML = `
                <div class="space-y-4">
                    <label class="block text-sm font-medium text-gray-700">คำตอบ:</label>
                    <textarea name="answer" rows="8"
                              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ruxchai-primary focus:border-transparent resize-none"
                              placeholder="เขียนคำตอบของคุณ...">${currentAnswer || ''}</textarea>
                    <div class="text-sm text-gray-500">
                        <span id="charCount">${(currentAnswer || '').length}</span> ตัวอักษร
                    </div>
                </div>
            `;

            // Add character counter for essay
            container.querySelector('textarea').addEventListener('input', function(e) {
                document.getElementById('charCount').textContent = e.target.value.length;
            });
            break;

        case 'multiple_select':
            const selectedAnswers = currentAnswer ? currentAnswer.split(',') : [];
            container.innerHTML = question.options.map((option, index) => `
                <label class="flex items-start space-x-3 p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors">
                    <input type="checkbox" name="answer" value="${index}"
                           ${selectedAnswers.includes(index.toString()) ? 'checked' : ''}
                           class="mt-1 text-ruxchai-primary focus:ring-ruxchai-primary rounded">
                    <span class="flex-1">${option}</span>
                </label>
            `).join('');

            // Handle multiple select
            container.addEventListener('change', function() {
                const checkboxes = container.querySelectorAll('input[type="checkbox"]:checked');
                const values = Array.from(checkboxes).map(cb => cb.value);
                answers[currentQuestionIndex] = values.join(',');
                updateProgress();
                autoSave();
            });
            break;
    }
}

// Save current answer
function saveAnswer() {
    const question = questions[currentQuestionIndex];

    if (question.type === 'multiple_select') {
        // Already handled in displayAnswerOptions
        return;
    }

    const answerInput = document.querySelector('input[name="answer"]:checked, input[name="answer"][type="text"], textarea[name="answer"]');

    if (answerInput) {
        answers[currentQuestionIndex] = answerInput.value;
    }

    updateProgress();
}

// Navigation functions
function goToPrevQuestion() {
    if (currentQuestionIndex > 0) {
        saveAnswer();
        loadQuestion(currentQuestionIndex - 1);
    }
}

function goToNextQuestion() {
    saveAnswer();

    if (currentQuestionIndex < questions.length - 1) {
        loadQuestion(currentQuestionIndex + 1);
    } else {
        showSubmitConfirmation();
    }
}

function goToQuestion(index) {
    saveAnswer();
    loadQuestion(index);
}

// Question marking
function toggleMarkQuestion() {
    if (markedQuestions.has(currentQuestionIndex)) {
        markedQuestions.delete(currentQuestionIndex);
    } else {
        markedQuestions.add(currentQuestionIndex);
    }

    loadQuestion(currentQuestionIndex); // Refresh to update button
}

// Clear current answer
function clearCurrentAnswer() {
    delete answers[currentQuestionIndex];

    // Clear form inputs
    const inputs = document.querySelectorAll('input[name="answer"], textarea[name="answer"]');
    inputs.forEach(input => {
        if (input.type === 'radio' || input.type === 'checkbox') {
            input.checked = false;
        } else {
            input.value = '';
        }
    });

    updateProgress();
    autoSave();
}

// Update progress
function updateProgress() {
    const totalQuestions = questions.length;
    const answeredCount = Object.keys(answers).length;
    const progressPercent = (answeredCount / totalQuestions) * 100;

    document.getElementById('progressText').textContent = `${answeredCount}/${totalQuestions}`;
    document.getElementById('progressBar').style.width = `${progressPercent}%`;
    document.getElementById('answeredCount').textContent = answeredCount;
    document.getElementById('unansweredCount').textContent = totalQuestions - answeredCount;
    document.getElementById('markedCount').textContent = markedQuestions.size;
    document.getElementById('reviewCount').textContent = markedQuestions.size;
}

// Update question navigator
function updateQuestionNavigator() {
    const container = document.getElementById('questionNavigator');

    container.innerHTML = questions.map((_, index) => {
        const isAnswered = answers.hasOwnProperty(index);
        const isMarked = markedQuestions.has(index);
        const isCurrent = index === currentQuestionIndex;

        let className = 'w-8 h-8 rounded text-center text-xs leading-8 cursor-pointer transition-colors ';

        if (isCurrent) {
            className += 'bg-ruxchai-primary text-white';
        } else if (isMarked) {
            className += 'bg-orange-500 text-white';
        } else if (isAnswered) {
            className += 'bg-green-500 text-white';
        } else {
            className += 'bg-gray-300 text-gray-700 hover:bg-gray-400';
        }

        return `
            <button class="${className}" onclick="goToQuestion(${index})">
                ${isMarked ? '<i class="fas fa-flag"></i>' : index + 1}
            </button>
        `;
    }).join('');
}

// Timer functions
function startTimer() {
    updateTimerDisplay();

    timerInterval = setInterval(() => {
        timeRemaining--;
        updateTimerDisplay();

        // Time warnings
        if (timeRemaining === 300) { // 5 minutes
            showTimeWarning('เหลือเวลาอีก 5 นาที กรุณาเตรียมตัวส่งข้อสอบ');
        } else if (timeRemaining === 60) { // 1 minute
            showTimeWarning('เหลือเวลาอีก 1 นาที ระบบจะส่งข้อสอบอัตโนมัติ');
        } else if (timeRemaining <= 0) {
            autoSubmitTest('time_up');
        }
    }, 1000);
}

function updateTimerDisplay() {
    const hours = Math.floor(timeRemaining / 3600);
    const minutes = Math.floor((timeRemaining % 3600) / 60);
    const seconds = timeRemaining % 60;

    const display = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
    document.getElementById('timer').textContent = display;

    // Change color when time is running low
    const timerElement = document.getElementById('timer');
    if (timeRemaining <= 300) { // 5 minutes
        timerElement.className = 'text-3xl font-bold text-red-600';
    } else if (timeRemaining <= 600) { // 10 minutes
        timerElement.className = 'text-3xl font-bold text-orange-600';
    } else {
        timerElement.className = 'text-3xl font-bold text-ruxchai-primary';
    }
}

// Auto-save
function setupAutoSave() {
    autoSaveInterval = setInterval(autoSave, 30000); // Every 30 seconds
}

async function autoSave() {
    try {
        const testId = getTestIdFromUrl();
        await fetch(`/applicants/api/test/${testId}/autosave`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                answers: answers,
                marked_questions: Array.from(markedQuestions),
                current_question: currentQuestionIndex,
                time_remaining: timeRemaining
            })
        });
    } catch (error) {
        console.error('Auto-save failed:', error);
    }
}

// Submit test
function showSubmitConfirmation() {
    saveAnswer();

    // Update final counts
    const totalQuestions = questions.length;
    const answeredCount = Object.keys(answers).length;

    document.getElementById('finalAnsweredCount').textContent = `${answeredCount} ข้อ`;
    document.getElementById('finalUnansweredCount').textContent = `${totalQuestions - answeredCount} ข้อ`;
    document.getElementById('finalMarkedCount').textContent = `${markedQuestions.size} ข้อ`;
    document.getElementById('finalTimeLeft').textContent = document.getElementById('timer').textContent;

    document.getElementById('confirmSubmitModal').classList.remove('hidden');
}

function hideSubmitConfirmation() {
    document.getElementById('confirmSubmitModal').classList.add('hidden');
}

async function submitTest() {
    try {
        const testId = getTestIdFromUrl();

        // Stop timer and auto-save
        clearInterval(timerInterval);
        clearInterval(autoSaveInterval);

        const response = await fetch(`/applicants/api/test/${testId}/submit`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                answers: answers,
                marked_questions: Array.from(markedQuestions),
                time_taken: (testData.time_limit * 60) - timeRemaining,
                submission_type: 'manual'
            })
        });

        const data = await response.json();

        if (data.success) {
            showMessage('ส่งข้อสอบเรียบร้อยแล้ว', 'success');

            setTimeout(() => {
                window.location.href = `/applicants/results/${data.result_id}`;
            }, 2000);
        } else {
            showMessage(data.message || 'เกิดข้อผิดพลาด', 'error');
            hideSubmitConfirmation();
        }
    } catch (error) {
        console.error('Error submitting test:', error);
        showMessage('เกิดข้อผิดพลาดในการส่งข้อสอบ', 'error');
        hideSubmitConfirmation();
    }
}

async function autoSubmitTest(reason) {
    try {
        const testId = getTestIdFromUrl();

        // Stop timer and auto-save
        clearInterval(timerInterval);
        clearInterval(autoSaveInterval);

        await fetch(`/applicants/api/test/${testId}/submit`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                answers: answers,
                marked_questions: Array.from(markedQuestions),
                time_taken: (testData.time_limit * 60) - timeRemaining,
                submission_type: 'auto',
                reason: reason
            })
        });

        showMessage('ส่งข้อสอบอัตโนมัติแล้ว', 'info');

        setTimeout(() => {
            window.location.href = '/applicants';
        }, 3000);
    } catch (error) {
        console.error('Error auto-submitting test:', error);
    }
}

// Time warning
function showTimeWarning(message) {
    document.getElementById('timeWarningMessage').textContent = message;
    document.getElementById('timeWarningModal').classList.remove('hidden');
}

function hideTimeWarning() {
    document.getElementById('timeWarningModal').classList.add('hidden');
}

// Suspicious activity logging
async function logSuspiciousActivity(type, data = {}) {
    try {
        const testId = getTestIdFromUrl();
        await fetch(`/applicants/api/test/${testId}/log-activity`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                activity_type: type,
                data: data,
                timestamp: new Date().toISOString()
            })
        });
    } catch (error) {
        console.error('Error logging activity:', error);
    }
}

// Utility functions
function getTestIdFromUrl() {
    const pathParts = window.location.pathname.split('/');
    return pathParts[pathParts.indexOf('test') + 1];
}

function getQuestionTypeName(type) {
    const types = {
        multiple_choice: 'ปรนัย',
        true_false: 'ถูก/ผิด',
        fill_blank: 'เติมคำ',
        essay: 'อัตนัย',
        multiple_select: 'เลือกหลายคำตอบ'
    };
    return types[type] || 'ไม่ทราบประเภท';
}

function showMessage(message, type = 'info') {
    const messageDiv = document.createElement('div');
    messageDiv.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-lg text-white ${
        type === 'success' ? 'bg-green-500' : type === 'error' ? 'bg-red-500' : 'bg-blue-500'
    }`;
    messageDiv.textContent = message;

    document.body.appendChild(messageDiv);

    setTimeout(() => {
        messageDiv.remove();
    }, 3000);
}

function showWarning(message) {
    const warningDiv = document.createElement('div');
    warningDiv.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 z-50 px-6 py-3 rounded-lg bg-yellow-500 text-white max-w-md text-center';
    warningDiv.textContent = message;

    document.body.appendChild(warningDiv);

    setTimeout(() => {
        warningDiv.remove();
    }, 5000);
}

// Prevent leaving page
window.addEventListener('beforeunload', function(e) {
    if (testStarted) {
        e.preventDefault();
        e.returnValue = '';
        return 'คุณกำลังทำข้อสอบอยู่ หากออกจากหน้านี้ คำตอบของคุณอาจสูญหาย';
    }
});
</script>

<%- include('../layouts/footer') %>