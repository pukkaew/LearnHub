<% layout('layout') -%>

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Page Header -->
    <div class="page-header bg-white shadow-sm rounded-lg mb-8 p-6">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">คอร์สเรียน</h1>
                <p class="text-gray-600 mt-1">ค้นหาและเรียนคอร์สที่น่าสนใจ</p>
            </div>
            <% if (['Admin', 'Instructor'].includes(user.role_name)) { %>
            <a href="/courses/create" class="btn-ruxchai-primary">
                <i class="fas fa-plus mr-2"></i>สร้างคอร์ส
            </a>
            <% } %>
        </div>
    </div>

    <!-- Search and Filters -->
    <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">ค้นหา</label>
                <input type="text" id="search" placeholder="ชื่อคอร์ส, คำอธิบาย..."
                       class="form-input-ruxchai">
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">หมวดหมู่</label>
                <select id="category" class="form-select-ruxchai">
                    <option value="">ทุกหมวดหมู่</option>
                    <!-- Categories will be loaded here -->
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">ระดับความยาก</label>
                <select id="difficulty" class="form-select-ruxchai">
                    <option value="">ทุกระดับ</option>
                    <option value="beginner">เริ่มต้น</option>
                    <option value="intermediate">ปานกลาง</option>
                    <option value="advanced">ขั้นสูง</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">สถานะ</label>
                <select id="status" class="form-select-ruxchai">
                    <option value="">ทั้งหมด</option>
                    <option value="not_enrolled">ยังไม่ได้เรียน</option>
                    <option value="in_progress">กำลังเรียน</option>
                    <option value="completed">เรียนจบแล้ว</option>
                </select>
            </div>
        </div>
        <div class="mt-4 flex justify-between items-center">
            <div class="flex space-x-2">
                <button id="clear-filters" class="text-gray-500 hover:text-gray-700">
                    <i class="fas fa-times mr-1"></i>ล้างตัวกรอง
                </button>
            </div>
            <div class="flex items-center space-x-4">
                <span class="text-sm text-gray-500">เรียงตาม:</span>
                <select id="sort" class="form-select-ruxchai text-sm">
                    <option value="created_at">ล่าสุด</option>
                    <option value="title">ชื่อคอร์ส</option>
                    <option value="popularity">ความนิยม</option>
                    <option value="rating">คะแนน</option>
                </select>
                <div class="flex space-x-1">
                    <button id="grid-view" class="p-2 text-gray-400 hover:text-ruxchai-primary">
                        <i class="fas fa-th-large"></i>
                    </button>
                    <button id="list-view" class="p-2 text-ruxchai-primary">
                        <i class="fas fa-list"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- My Courses Section -->
    <% if (locals.user) { %>
    <div class="mb-8">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-gray-900">คอร์สของฉัน</h2>
            <a href="/courses/my-courses" class="text-ruxchai-primary hover:text-ruxchai-blue-700 text-sm font-medium">
                ดูทั้งหมด <i class="fas fa-arrow-right ml-1"></i>
            </a>
        </div>
        <div id="my-courses" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <!-- My courses will be loaded here -->
        </div>
    </div>
    <% } %>

    <!-- Recommended Courses -->
    <div class="mb-8">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-gray-900">คอร์สแนะนำ</h2>
        </div>
        <div id="recommended-courses" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            <!-- Recommended courses will be loaded here -->
        </div>
    </div>

    <!-- All Courses -->
    <div>
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-xl font-semibold text-gray-900">คอร์สทั้งหมด</h2>
            <div class="text-sm text-gray-500">
                พบ <span id="total-courses">0</span> คอร์ส
            </div>
        </div>

        <!-- Course Grid/List -->
        <div id="courses-container">
            <!-- Grid View (default) -->
            <div id="courses-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <!-- Courses will be loaded here -->
            </div>

            <!-- List View -->
            <div id="courses-list" class="hidden space-y-4">
                <!-- Courses will be loaded here -->
            </div>
        </div>

        <!-- Load More Button -->
        <div class="text-center mt-8">
            <button id="load-more" class="btn-ruxchai-outline hidden">
                <i class="fas fa-plus mr-2"></i>โหลดเพิ่มเติม
            </button>
        </div>

        <!-- Pagination -->
        <div id="pagination" class="flex justify-center mt-8">
            <!-- Pagination will be loaded here -->
        </div>
    </div>
</div>

<!-- Loading overlay -->
<div id="loading-overlay" class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
    <div class="bg-white rounded-lg p-6 flex items-center space-x-3">
        <i class="fas fa-spinner fa-spin text-ruxchai-primary text-xl"></i>
        <span class="text-gray-700">กำลังโหลดคอร์ส...</span>
    </div>
</div>

<!-- Course Enrollment Modal -->
<div id="enrollment-modal" class="hidden fixed inset-0 z-50 overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen px-4">
        <div class="modal-overlay"></div>
        <div class="modal-content max-w-md w-full p-6">
            <div class="text-center">
                <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 mb-4">
                    <i class="fas fa-graduation-cap text-blue-600"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">ลงทะเบียนเรียน</h3>
                <p class="text-sm text-gray-500 mb-6">คุณต้องการลงทะเบียนเรียนคอร์สนี้หรือไม่?</p>
                <div class="flex space-x-3">
                    <button id="confirm-enrollment" class="flex-1 btn-ruxchai-primary">ยืนยัน</button>
                    <button id="cancel-enrollment" class="flex-1 btn-ruxchai-outline">ยกเลิก</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let currentPage = 1;
let currentFilters = {};
let selectedCourseId = null;

document.addEventListener('DOMContentLoaded', function() {
    initializeCoursePage();
});

async function initializeCoursePage() {
    try {
        // Load initial data
        await Promise.all([
            loadCategories(),
            loadMyCourses(),
            loadRecommendedCourses(),
            loadCourses()
        ]);

        setupEventListeners();
    } catch (error) {
        console.error('Error initializing course page:', error);
        showError('เกิดข้อผิดพลาดในการโหลดข้อมูล');
    } finally {
        document.getElementById('loading-overlay').style.display = 'none';
    }
}

function setupEventListeners() {
    // Search and filters
    document.getElementById('search').addEventListener('input', debounce(handleFilterChange, 300));
    document.getElementById('category').addEventListener('change', handleFilterChange);
    document.getElementById('difficulty').addEventListener('change', handleFilterChange);
    document.getElementById('status').addEventListener('change', handleFilterChange);
    document.getElementById('sort').addEventListener('change', handleFilterChange);

    // View toggles
    document.getElementById('grid-view').addEventListener('click', () => switchView('grid'));
    document.getElementById('list-view').addEventListener('click', () => switchView('list'));

    // Clear filters
    document.getElementById('clear-filters').addEventListener('click', clearFilters);

    // Load more
    document.getElementById('load-more').addEventListener('click', loadMoreCourses);

    // Modal events
    document.getElementById('confirm-enrollment').addEventListener('click', enrollInCourse);
    document.getElementById('cancel-enrollment').addEventListener('click', closeEnrollmentModal);
}

async function loadCategories() {
    try {
        const response = await fetch('/courses/api/categories');
        const data = await response.json();

        if (data.success) {
            const select = document.getElementById('category');
            select.innerHTML = '<option value="">ทุกหมวดหมู่</option>';

            data.data.forEach(category => {
                const option = document.createElement('option');
                option.value = category.category_id;
                option.textContent = category.category_name;
                select.appendChild(option);
            });
        }
    } catch (error) {
        console.error('Error loading categories:', error);
    }
}

async function loadMyCourses() {
    try {
        const response = await fetch('/courses/api/my-courses?limit=3');
        const data = await response.json();

        if (data.success) {
            updateMyCourses(data.data);
        }
    } catch (error) {
        console.error('Error loading my courses:', error);
    }
}

async function loadRecommendedCourses() {
    try {
        const response = await fetch('/courses/api/recommended?limit=4');
        const data = await response.json();

        if (data.success) {
            updateRecommendedCourses(data.data);
        }
    } catch (error) {
        console.error('Error loading recommended courses:', error);
    }
}

async function loadCourses(page = 1) {
    try {
        const params = new URLSearchParams({
            page: page,
            limit: 12,
            ...currentFilters
        });

        const response = await fetch(`/courses/api/list?${params}`);
        const data = await response.json();

        if (data.success) {
            if (page === 1) {
                updateCourses(data.data);
            } else {
                appendCourses(data.data);
            }
            updatePagination(data.pagination);
            document.getElementById('total-courses').textContent = data.pagination.total;
        }
    } catch (error) {
        console.error('Error loading courses:', error);
        showError('เกิดข้อผิดพลาดในการโหลดคอร์ส');
    }
}

function updateMyCourses(courses) {
    const container = document.getElementById('my-courses');

    if (!courses || courses.length === 0) {
        container.innerHTML = `
            <div class="col-span-full text-center py-8">
                <i class="fas fa-graduation-cap text-gray-300 text-4xl mb-4"></i>
                <p class="text-gray-500">คุณยังไม่ได้ลงทะเบียนคอร์สใดๆ</p>
                <a href="#recommended-courses" class="text-ruxchai-primary hover:text-ruxchai-blue-700 mt-2 inline-block">
                    ดูคอร์สแนะนำ
                </a>
            </div>
        `;
        return;
    }

    container.innerHTML = courses.map(course => createCourseCard(course, true)).join('');
}

function updateRecommendedCourses(courses) {
    const container = document.getElementById('recommended-courses');

    if (!courses || courses.length === 0) {
        container.innerHTML = `
            <div class="col-span-full text-center py-8">
                <p class="text-gray-500">ไม่มีคอร์สแนะนำในขณะนี้</p>
            </div>
        `;
        return;
    }

    container.innerHTML = courses.map(course => createCourseCard(course)).join('');
}

function updateCourses(courses) {
    const gridContainer = document.getElementById('courses-grid');
    const listContainer = document.getElementById('courses-list');

    if (!courses || courses.length === 0) {
        const emptyMessage = `
            <div class="col-span-full text-center py-12">
                <i class="fas fa-search text-gray-300 text-4xl mb-4"></i>
                <p class="text-gray-500">ไม่พบคอร์สที่ตรงกับเงื่อนไขการค้นหา</p>
                <button onclick="clearFilters()" class="text-ruxchai-primary hover:text-ruxchai-blue-700 mt-2">
                    ล้างตัวกรอง
                </button>
            </div>
        `;
        gridContainer.innerHTML = emptyMessage;
        listContainer.innerHTML = emptyMessage;
        return;
    }

    gridContainer.innerHTML = courses.map(course => createCourseCard(course)).join('');
    listContainer.innerHTML = courses.map(course => createCourseListItem(course)).join('');
}

function appendCourses(courses) {
    const gridContainer = document.getElementById('courses-grid');
    const listContainer = document.getElementById('courses-list');

    gridContainer.innerHTML += courses.map(course => createCourseCard(course)).join('');
    listContainer.innerHTML += courses.map(course => createCourseListItem(course)).join('');
}

function createCourseCard(course, showProgress = false) {
    const enrollmentStatus = getEnrollmentStatus(course);
    const progressPercentage = course.progress_percentage || 0;

    return `
        <div class="bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 ruxchai-card">
            <div class="relative">
                <img src="${course.thumbnail || '/images/course-default.jpg'}"
                     alt="${course.title}"
                     class="w-full h-48 object-cover rounded-t-lg">
                <div class="absolute top-3 left-3">
                    <span class="badge-${getDifficultyColor(course.difficulty_level)}">
                        ${getDifficultyText(course.difficulty_level)}
                    </span>
                </div>
                <div class="absolute top-3 right-3">
                    ${enrollmentStatus.badge}
                </div>
            </div>

            <div class="p-6">
                <div class="flex items-center text-sm text-gray-500 mb-2">
                    <i class="fas fa-folder mr-1"></i>
                    <span>${course.category_name || 'ทั่วไป'}</span>
                    <span class="mx-2">•</span>
                    <i class="fas fa-clock mr-1"></i>
                    <span>${course.duration_hours || 0} ชั่วโมง</span>
                </div>

                <h3 class="font-semibold text-gray-900 mb-2 line-clamp-2">
                    <a href="/courses/${course.course_id}" class="hover:text-ruxchai-primary">
                        ${course.title}
                    </a>
                </h3>

                <p class="text-gray-600 text-sm mb-4 line-clamp-2">
                    ${course.description || ''}
                </p>

                ${showProgress && progressPercentage > 0 ? `
                    <div class="mb-4">
                        <div class="flex justify-between text-sm text-gray-600 mb-1">
                            <span>ความคืบหน้า</span>
                            <span>${progressPercentage}%</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill" style="width: ${progressPercentage}%"></div>
                        </div>
                    </div>
                ` : ''}

                <div class="flex items-center justify-between">
                    <div class="flex items-center text-sm text-gray-500">
                        <i class="fas fa-user mr-1"></i>
                        <span>${course.instructor_name || 'ไม่ระบุ'}</span>
                    </div>

                    <div class="flex items-center space-x-2">
                        ${course.rating ? `
                            <div class="flex items-center text-yellow-400">
                                <i class="fas fa-star text-xs"></i>
                                <span class="text-sm text-gray-600 ml-1">${course.rating}</span>
                            </div>
                        ` : ''}

                        ${enrollmentStatus.button}
                    </div>
                </div>
            </div>
        </div>
    `;
}

function createCourseListItem(course) {
    const enrollmentStatus = getEnrollmentStatus(course);
    const progressPercentage = course.progress_percentage || 0;

    return `
        <div class="bg-white rounded-lg shadow-sm p-6 ruxchai-card">
            <div class="flex space-x-6">
                <div class="flex-shrink-0">
                    <img src="${course.thumbnail || '/images/course-default.jpg'}"
                         alt="${course.title}"
                         class="w-24 h-24 object-cover rounded-lg">
                </div>

                <div class="flex-1 min-w-0">
                    <div class="flex items-start justify-between">
                        <div class="flex-1">
                            <h3 class="text-lg font-semibold text-gray-900 mb-2">
                                <a href="/courses/${course.course_id}" class="hover:text-ruxchai-primary">
                                    ${course.title}
                                </a>
                            </h3>

                            <p class="text-gray-600 mb-3 line-clamp-2">
                                ${course.description || ''}
                            </p>

                            <div class="flex items-center space-x-4 text-sm text-gray-500 mb-3">
                                <span><i class="fas fa-folder mr-1"></i>${course.category_name || 'ทั่วไป'}</span>
                                <span><i class="fas fa-clock mr-1"></i>${course.duration_hours || 0} ชั่วโมง</span>
                                <span><i class="fas fa-user mr-1"></i>${course.instructor_name || 'ไม่ระบุ'}</span>
                                ${course.rating ? `<span><i class="fas fa-star text-yellow-400 mr-1"></i>${course.rating}</span>` : ''}
                            </div>

                            ${progressPercentage > 0 ? `
                                <div class="mb-3">
                                    <div class="flex justify-between text-sm text-gray-600 mb-1">
                                        <span>ความคืบหน้า</span>
                                        <span>${progressPercentage}%</span>
                                    </div>
                                    <div class="progress-bar">
                                        <div class="progress-fill" style="width: ${progressPercentage}%"></div>
                                    </div>
                                </div>
                            ` : ''}
                        </div>

                        <div class="flex flex-col items-end space-y-2">
                            <div class="flex space-x-2">
                                <span class="badge-${getDifficultyColor(course.difficulty_level)}">
                                    ${getDifficultyText(course.difficulty_level)}
                                </span>
                                ${enrollmentStatus.badge}
                            </div>
                            ${enrollmentStatus.button}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
}

function getEnrollmentStatus(course) {
    if (course.enrollment_status === 'active') {
        return {
            badge: '<span class="badge-success">กำลังเรียน</span>',
            button: `<a href="/courses/${course.course_id}" class="btn-ruxchai-primary text-sm">เข้าเรียน</a>`
        };
    } else if (course.enrollment_status === 'completed') {
        return {
            badge: '<span class="badge-primary">เรียนจบแล้ว</span>',
            button: `<a href="/courses/${course.course_id}" class="btn-ruxchai-outline text-sm">ทบทวน</a>`
        };
    } else {
        return {
            badge: '',
            button: `<button onclick="showEnrollmentModal('${course.course_id}')" class="btn-ruxchai-outline text-sm">ลงทะเบียน</button>`
        };
    }
}

function getDifficultyColor(level) {
    const colors = {
        'beginner': 'success',
        'intermediate': 'warning',
        'advanced': 'danger'
    };
    return colors[level] || 'primary';
}

function getDifficultyText(level) {
    const texts = {
        'beginner': 'เริ่มต้น',
        'intermediate': 'ปานกลาง',
        'advanced': 'ขั้นสูง'
    };
    return texts[level] || 'ไม่ระบุ';
}

function handleFilterChange() {
    currentFilters = {
        search: document.getElementById('search').value,
        category: document.getElementById('category').value,
        difficulty: document.getElementById('difficulty').value,
        status: document.getElementById('status').value,
        sort: document.getElementById('sort').value
    };

    currentPage = 1;
    loadCourses(1);
}

function clearFilters() {
    document.getElementById('search').value = '';
    document.getElementById('category').value = '';
    document.getElementById('difficulty').value = '';
    document.getElementById('status').value = '';
    document.getElementById('sort').value = 'created_at';

    currentFilters = {};
    currentPage = 1;
    loadCourses(1);
}

function switchView(view) {
    const gridView = document.getElementById('courses-grid');
    const listView = document.getElementById('courses-list');
    const gridBtn = document.getElementById('grid-view');
    const listBtn = document.getElementById('list-view');

    if (view === 'grid') {
        gridView.classList.remove('hidden');
        listView.classList.add('hidden');
        gridBtn.classList.add('text-ruxchai-primary');
        gridBtn.classList.remove('text-gray-400');
        listBtn.classList.add('text-gray-400');
        listBtn.classList.remove('text-ruxchai-primary');
    } else {
        gridView.classList.add('hidden');
        listView.classList.remove('hidden');
        listBtn.classList.add('text-ruxchai-primary');
        listBtn.classList.remove('text-gray-400');
        gridBtn.classList.add('text-gray-400');
        gridBtn.classList.remove('text-ruxchai-primary');
    }
}

async function loadMoreCourses() {
    currentPage++;
    await loadCourses(currentPage);
}

function updatePagination(pagination) {
    const loadMoreBtn = document.getElementById('load-more');

    if (pagination.page < pagination.totalPages) {
        loadMoreBtn.classList.remove('hidden');
    } else {
        loadMoreBtn.classList.add('hidden');
    }
}

function showEnrollmentModal(courseId) {
    selectedCourseId = courseId;
    document.getElementById('enrollment-modal').classList.remove('hidden');
}

function closeEnrollmentModal() {
    selectedCourseId = null;
    document.getElementById('enrollment-modal').classList.add('hidden');
}

async function enrollInCourse() {
    if (!selectedCourseId) return;

    try {
        const response = await fetch(`/courses/api/${selectedCourseId}/enroll`, {
            method: 'POST'
        });

        const data = await response.json();

        if (data.success) {
            showSuccess('ลงทะเบียนเรียนสำเร็จ');
            closeEnrollmentModal();
            // Reload courses to update status
            loadCourses(currentPage);
            loadMyCourses();
        } else {
            showError(data.message || 'เกิดข้อผิดพลาดในการลงทะเบียน');
        }
    } catch (error) {
        console.error('Error enrolling in course:', error);
        showError('เกิดข้อผิดพลาดในการลงทะเบียน');
    }
}

// Utility functions
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

function showSuccess(message) {
    // Implementation for success message
    const alert = document.createElement('div');
    alert.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in';
    alert.innerHTML = `<i class="fas fa-check-circle mr-2"></i>${message}`;
    document.body.appendChild(alert);
    setTimeout(() => alert.remove(), 3000);
}

function showError(message) {
    // Implementation for error message
    const alert = document.createElement('div');
    alert.className = 'fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg z-50 animate-fade-in';
    alert.innerHTML = `<i class="fas fa-exclamation-circle mr-2"></i>${message}`;
    document.body.appendChild(alert);
    setTimeout(() => alert.remove(), 3000);
}
</script>

<style>
.line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}
</style>