<div class="bg-gradient-to-br from-ruxchai-primary/5 to-ruxchai-secondary/5 min-h-screen">
    <div class="container mx-auto px-6 py-8">
        <!-- Flash Messages -->
        <% if (typeof success_msg !== 'undefined' && success_msg && success_msg.length > 0) { %>
            <div class="mb-6 bg-green-50 border-l-4 border-green-500 p-4 rounded-lg shadow-sm flash-message">
                <div class="flex items-center">
                    <i class="fas fa-check-circle text-green-500 text-xl mr-3"></i>
                    <p class="text-green-700 font-medium"><%= Array.isArray(success_msg) ? success_msg[0] : success_msg %></p>
                </div>
            </div>
        <% } %>

        <% if (typeof error_msg !== 'undefined' && error_msg && error_msg.length > 0) { %>
            <div class="mb-6 bg-red-50 border-l-4 border-red-500 p-4 rounded-lg shadow-sm flash-message">
                <div class="flex items-center">
                    <i class="fas fa-exclamation-circle text-red-500 text-xl mr-3"></i>
                    <p class="text-red-700 font-medium"><%= Array.isArray(error_msg) ? error_msg[0] : error_msg %></p>
                </div>
            </div>
        <% } %>

        <!-- Header -->
        <div class="flex items-center justify-between mb-8">
            <div>
                <h1 class="text-3xl font-bold text-gray-900 mb-2"><%= t('editPosition') %></h1>
                <p class="text-gray-600"><%= position.position_name %></p>
            </div>
            <a href="/organization/positions" class="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 transition-colors shadow-md">
                <i class="fas fa-times mr-2"></i><%= t('cancel') %>
            </a>
        </div>

        <!-- Form -->
        <form id="editPositionForm" method="POST" action="/organization/positions/<%= position.position_id %>/edit" class="bg-white rounded-xl shadow-sm border border-gray-100 p-8">
            <div class="space-y-6">
                <!-- Basic Information Section -->
                <div>
                    <h2 class="text-lg font-semibold text-gray-900 mb-4 flex items-center border-b pb-3">
                        <i class="fas fa-info-circle text-ruxchai-primary mr-2"></i>
                        <%= t('basicInfo') %>
                    </h2>
                    <div class="grid grid-cols-1 gap-6">
                        <!-- Position Name -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                <%= t('positionName') %> <span class="text-red-500">*</span>
                            </label>
                            <input type="text" name="position_name" value="<%= position.position_name %>" required
                                   class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ruxchai-primary focus:border-transparent transition-all"
                                   placeholder="<%= t('positionName') %>">
                        </div>

                        <!-- Unit -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                <%= t('unit') %>
                            </label>
                            <select name="unit_id"
                                    class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ruxchai-primary focus:border-transparent transition-all">
                                <option value=""><%= t('chooseUnit') %></option>
                                <% units.forEach(unit => { %>
                                    <option value="<%= unit.unit_id %>" <%= (position.unit_id || position.department_id) == unit.unit_id ? 'selected' : '' %>>
                                        <%= unit.unit_name_th %>
                                    </option>
                                <% }); %>
                            </select>
                        </div>

                        <!-- Description -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                <%= t('description') %>
                            </label>
                            <textarea name="description" rows="3"
                                      class="w-full px-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-ruxchai-primary focus:border-transparent transition-all"
                                      placeholder="<%= t('descriptionDetail') %>"><%= position.description || '' %></textarea>
                        </div>

                        <!-- Status -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">
                                <%= t('status') %>
                            </label>
                            <label class="relative inline-flex items-center cursor-pointer">
                                <input type="checkbox" name="is_active" value="1" class="sr-only peer" <%= position.is_active ? 'checked' : '' %>>
                                <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                                <span class="ml-3 text-sm font-medium text-gray-700"><%= t('active') %></span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="flex justify-end space-x-3 pt-6 border-t border-gray-200">
                    <a href="/organization/positions" class="px-6 py-2.5 text-gray-700 font-medium bg-white border-2 border-gray-300 rounded-lg hover:bg-gray-50 hover:border-gray-400 transition-all">
                        <i class="fas fa-times mr-2"></i><%= t('cancel') %>
                    </a>
                    <button type="submit" class="px-6 py-2.5 bg-ruxchai-primary text-white font-medium rounded-lg hover:bg-ruxchai-primary/90 transition-all shadow-sm hover:shadow-md">
                        <i class="fas fa-save mr-2"></i><%= t('saveChanges') %>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
// Pass translations to JavaScript
const translations = {
    positionUpdatedSuccess: '<%= t("positionUpdatedSuccess") %>',
    error: '<%= t("errorUpdate") %>'
};

// Submit form with AJAX to show toast notification
document.addEventListener('DOMContentLoaded', function() {
    // Show flash message if exists (for errors when redirected back)
    <% if (typeof success_msg !== 'undefined' && success_msg && success_msg.length > 0) { %>
        showMessage(<%- JSON.stringify(Array.isArray(success_msg) ? success_msg[0] : success_msg) %>, 'success');
    <% } %>
    <% if (typeof error_msg !== 'undefined' && error_msg && error_msg.length > 0) { %>
        showMessage(<%- JSON.stringify(Array.isArray(error_msg) ? error_msg[0] : error_msg) %>, 'error');
    <% } %>

    // Auto-hide flash messages after 5 seconds (for inline messages)
    const flashMessages = document.querySelectorAll('.flash-message');
    flashMessages.forEach(function(message) {
        setTimeout(function() {
            message.style.transition = 'opacity 0.5s ease';
            message.style.opacity = '0';
            setTimeout(function() {
                message.remove();
            }, 500);
        }, 5000);
    });

    // Handle form submission with AJAX
    const form = document.getElementById('editPositionForm');
    form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(form);

        // Get description value - check if it's null/undefined and convert to empty string
        const descriptionValue = formData.get('description');

        // Check if checkbox is checked (checkbox returns 'on' when checked, null when unchecked)
        const isActiveValue = formData.get('is_active');

        const jsonData = {
            position_name: formData.get('position_name'),
            unit_id: formData.get('unit_id') || null,
            description: descriptionValue !== null ? descriptionValue : '',
            is_active: isActiveValue !== null  // If checkbox is checked, it will have value 'on' or '1'
        };

        try {
            const response = await fetch(form.action, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify(jsonData)
            });

            const data = await response.json();

            if (data.success) {
                showMessage(translations.positionUpdatedSuccess, 'success');
                setTimeout(() => {
                    window.location.href = '/organization/positions';
                }, 1500);
            } else {
                showMessage(data.message || translations.error, 'error');
            }
        } catch (error) {
            console.error('Error:', error);
            showMessage(translations.error, 'error');
        }
    });
});

// Show message function (for validation errors)
function showMessage(message, type = 'info') {
    const messageDiv = document.createElement('div');
    const icon = type === 'success' ? 'fa-check-circle' : type === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle';
    const bgColor = type === 'success' ? 'bg-green-500' : type === 'error' ? 'bg-red-500' : 'bg-blue-500';

    messageDiv.className = `fixed top-4 right-4 z-50 px-6 py-4 rounded-lg text-white shadow-lg ${bgColor} flex items-center space-x-3`;
    messageDiv.innerHTML = `
        <i class="fas ${icon} text-xl"></i>
        <span class="font-medium">${message}</span>
    `;

    document.body.appendChild(messageDiv);

    // Slide in animation
    messageDiv.style.transform = 'translateX(100%)';
    messageDiv.style.opacity = '0';
    setTimeout(() => {
        messageDiv.style.transition = 'all 0.3s ease-out';
        messageDiv.style.transform = 'translateX(0)';
        messageDiv.style.opacity = '1';
    }, 10);

    // Auto fade out after 3 seconds
    setTimeout(() => {
        messageDiv.style.transition = 'opacity 0.5s ease';
        messageDiv.style.opacity = '0';
        setTimeout(() => {
            messageDiv.remove();
        }, 500);
    }, 3000);
}
</script>
